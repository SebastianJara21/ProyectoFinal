/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package FormulariosBH;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mdazt
 */
public class BuscarUsuario extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarUsuario
     */
    DefaultTableModel modelo;

    public BuscarUsuario() {
        initComponents();
        PrepararTabla();
        cargarDatosAlModel();
    }

    private void PrepararTabla() {
        String titulos[] = {"Cédula", "Nombre", "E-mail", "Dirección", "# Silla", "Clase"};
        modelo = new DefaultTableModel(null, titulos);
        tbClientes.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Buscar Usuario");

        jLabel1.setText("Buscar Usuario");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public File[] getTxtFiles(String directory) {
        File dir = new File(directory);
        if (dir.isDirectory()) {
            return dir.listFiles((dir1, name) -> name.endsWith(".txt"));
        }
        return null;
    }

    private void cargarDatosAlModel() {
        PrepararTabla();
        String pathClientes = "C:\\Users\\Usuario\\OneDrive\\Escritorio\\Clientes";
        String pathVuelos = "C:\\Users\\Usuario\\OneDrive\\Escritorio\\Vuelos";
        File[] listaArchivosClientes = getTxtFiles(pathClientes);
        File[] listaArchivosVuelos = getTxtFiles(pathVuelos);

        for (File fileCliente : listaArchivosClientes) {
            String cedulaCliente = "";
            String nombreCliente = "";
            String emailCliente = "";
            String direccionCliente = "";

            // Leer datos del cliente
            try (BufferedReader brCliente = new BufferedReader(new FileReader(fileCliente))) {
                String line;
                while ((line = brCliente.readLine()) != null) {
                    line = line.replaceAll("\n", "");
                    String[] partes = line.split("=");
                    if (partes.length == 2) {
                        switch (partes[0]) {
                            case "Cédula":
                                cedulaCliente = partes[1];
                                break;
                            case "Nombre":
                                nombreCliente = partes[1];
                                break;
                            case "E-mail":
                                emailCliente = partes[1];
                                break;
                            case "Dirección":
                                direccionCliente = partes[1];
                                break;
                        }
                    }
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error al cargar datos del cliente: " + e.getMessage());
            }

            for (File fileVuelo : listaArchivosVuelos) {
                String nSilla = "";
                String claseSilla = "";
                String usuario = "";

                // Leer datos del vuelo
                try (BufferedReader brVuelo = new BufferedReader(new FileReader(fileVuelo))) {
                    String line;
                    while ((line = brVuelo.readLine()) != null) {
                        line = line.replaceAll("\n", "");
                        String[] partes = line.split("=");
                        if (partes.length == 2) {
                            switch (partes[0]) {
                                case "NSilla":
                                    nSilla = partes[1];
                                    break;
                                case "ClaseSilla":
                                    claseSilla = partes[1];
                                    break;
                                case "Usuario":
                                    usuario = partes[1];
                                    break;
                            }
                        }
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error al cargar datos del vuelo: " + e.getMessage());
                }

                // Comprobar si las cédulas coinciden
                if (cedulaCliente.equals(usuario)) {
                    String[] nuevaFila = {cedulaCliente, nombreCliente, emailCliente, direccionCliente, nSilla, claseSilla};
                    modelo.addRow(nuevaFila);
                }
            }
        }
    }

    private void buscarClienteText(String identificacion) {
        PrepararTabla();
        String path = "C:\\Users\\Usuario\\OneDrive\\Escritorio\\Clientes";
        String pathVuelos = "C:\\Users\\Usuario\\OneDrive\\Escritorio\\Vuelos";
        File[] listaArchivosVuelos = getTxtFiles(pathVuelos);
        File[] listaArchivos = getTxtFiles(path);
        String Email = "", Contraseña = "", Cedula = "", Nombre = "", Edad = "", Direccion = "";
        for (File file : listaArchivos) {
            System.out.println("Contenido del archivo " + file.getName());
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String line;

                while ((line = br.readLine()) != null) {
                    line = line.replaceAll("\n", "");
                    String[] partes = line.split("=");
                    if (partes.length == 2) {
                        switch (partes[0]) {
                            case "E-mail":
                                Email = partes[1];
                                break;
                            case "Contraseña":
                                Contraseña = partes[1];
                                break;
                            case "Cédula":
                                Cedula = partes[1];
                                break;
                            case "Nombre":
                                Nombre = partes[1];
                                break;
                            case "Edad":
                                Edad = partes[1];
                                break;
                            case "Dirección":
                                Direccion = partes[1];
                                break;
                        }
                    }
                }

            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error en el cargar datos: " + e.getMessage());
            }

            for (File fileVuelo : listaArchivosVuelos) {
                String nSilla = "";
                String claseSilla = "";
                String usuario = "";

                // Leer datos del vuelo
                try (BufferedReader brVuelo = new BufferedReader(new FileReader(fileVuelo))) {
                    String line;
                    while ((line = brVuelo.readLine()) != null) {
                        line = line.replaceAll("\n", "");
                        String[] partes = line.split("=");
                        if (partes.length == 2) {
                            switch (partes[0]) {
                                case "NSilla":
                                    nSilla = partes[1];
                                    break;
                                case "ClaseSilla":
                                    claseSilla = partes[1];
                                    break;
                                case "Usuario":
                                    usuario = partes[1];
                                    break;
                            }
                        }
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error al cargar datos del vuelo: " + e.getMessage());
                }

// Comprobar si las cédulas coinciden
                if (Cedula.equals(identificacion)) {
                    if (Cedula.equals(usuario)) {
                        String[] nuevaFila = {Cedula, Nombre, Email, Direccion, nSilla, claseSilla};
                        modelo.addRow(nuevaFila);
                    }
                }
            }
        }
    }


    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        //CAPTURAR LO QUE PONGA
        String identificacion = txtBuscar.getText().trim();
        if (identificacion.trim().equals("")) {
            cargarDatosAlModel();
        } else {
            buscarClienteText(identificacion);
        }

    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbClientes;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
